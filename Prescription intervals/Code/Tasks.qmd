---
title: "Tasks for 08/07/2025"
format: html
editor: visual
---

```{r Background-Code, include=FALSE}
##---##Getting Started##-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
library(tidyverse)
library(dplyr)     
library(lubridate)  
library(ggplot2)

##---##Isolating Statin Data---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

df <- read.csv("/Users/padraicdonoghue/Library/CloudStorage/OneDrive-SharedLibraries-RoyalCollegeofSurgeonsinIreland/Frank Moriarty - RSS 2025/prescriptions_subsample_170625.csv")
statins <- df %>% 
  filter(str_detect(atc_final, "C10AA"))

##---##Formatting Date---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

statins <- statins %>% 
  mutate(script_date = as.Date(as.character(script_date), 
                               format = "%d%b%Y"))  

##---##Isolating one practice--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

statinGP37all <- statins %>% 
  filter(UniquePracticeID == 37) %>% 
  arrange(script_date) %>%
  mutate(gap_days = as.numeric(difftime(script_date, lag(script_date), units = "days")))

##---##Generating a column that includes the gap between previous and current RX-----------------------------------------------------------------------------------------------------------------------

statinGP37all <- statinGP37all %>%
  arrange(UniquePatientID, script_date) %>%  
  group_by(UniquePatientID) %>%
  mutate(gap_days = as.numeric(script_date - lag(script_date))) %>%
  ungroup()

##---##Step 1: Calculate inter-arrival (gap) times for each patient----------------------------
statins_gaps <- statins %>%
  arrange(UniquePatientID, script_date) %>%
  group_by(UniquePatientID) %>%
  mutate(gap_days = as.numeric(difftime(script_date, lag(script_date), units = "days"))) %>%
  filter(!is.na(gap_days))  # Remove first prescriptions (no gap)


##--Step 1: Calculate average gap time per patient---------------------------------------------
patient_avg_gaps <- statins_gaps %>%
  group_by(UniquePatientID) %>%
  summarise(avg_gap = mean(gap_days, na.rm = TRUE), .groups = "drop")
```

# Task 1: Table of mean, standard deviation and gamma parameter of inter-arrival density (calculated from WTD) stratified by GP practice

------------------------------------------------------------------------

[Didn't manage to get gamma parameter - unsure what it is]{.underline}

```{r}
library(knitr)
statin_summary_by_atc <- statinGP37all %>%
  group_by(atc_final, genericname) %>%
  summarise(
    count = sum(!is.na(gap_days)),
    mean_IAD = mean(gap_days, na.rm = TRUE),
    median_IAD = median(gap_days, na.rm = TRUE),
    sd_IAD = sd(gap_days, na.rm = TRUE),
    iqr_IAD = IQR(gap_days, na.rm = TRUE),
    min_IAD = min(gap_days, na.rm = TRUE),
    max_IAD = max(gap_days, na.rm = TRUE)
  )
kable(statin_summary_by_atc, caption = "Summary of Statin Gaps by ATC Code")
```

# Task 2: Plot of the cumulative distribution function of interarrival density (calculated from WTD) - for this use the whole dataset for one drug class

------------------------------------------------------------------------

```{r}
cdf_plot <- ggplot(statins_gaps, aes(x = gap_days)) +
  stat_ecdf(geom = "step", colour = "skyblue", linewidth = 1) +
  scale_x_continuous(
    breaks = seq(0, max(patient_avg_gaps$avg_gap, na.rm = TRUE), by = 60)
  ) +
  labs(
    title = "CDF of Interarrival Times for Statin Prescriptions",
    x = "Days Between Prescriptions",
    y = "Cumulative Probability"
  ) +
  theme_minimal()

plot(cdf_plot)

```

# Task 3: Plot of the smoothed histogram of average renewal time, calculated using empirical gap times

------------------------------------------------------------------------

```{r}
# Step 2: Plot smoothed histogram (density plot)
density_plot <- ggplot(patient_avg_gaps, aes(x = avg_gap)) +
  geom_density(fill = "skyblue", alpha = 0.6) +
  scale_x_continuous(
    breaks = seq(0, max(patient_avg_gaps$avg_gap, na.rm = TRUE), by = 60)
  ) +
  labs(
    title = "Smoothed Histogram of Average Gap Time per Patient (Statins)",
    x = "Average Days Between Prescriptions",
    y = "Density"
  ) +
  theme_minimal()

plot(density_plot)
```
